name: Playwright Tests
on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [ main, master ]
permissions:
  contents: read
  actions: read
  checks: write
jobs:
  playwright:
    env:
      DISPLAY: :0
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    container:
      image: adaliya/jdk-17-maven-browsers:latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build & Install
        run: mvn -B install -D skipTests --no-transfer-progress
      - name: Install Playwright
        run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
      - name: Run tests
        run: xvfb-run mvn test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
            check_name: 'Tests results'
            report_paths: '**/target/surefire-reports/TEST-*.xml'
            include_passed: true
      - name: Allure install
        if: always()
        run: |
          curl -o allure-2.27.0.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.27.0/allure-commandline-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
          allure --version
          allure generate target/allure-results -o target/allure-reports --clean --single-file
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: assets-for-download
          path: target/allure-reports
          retention-days: 3
      - name: Upload images
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: images
          path: target/images
          retention-days: 3
